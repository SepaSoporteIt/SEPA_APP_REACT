{"remainingRequest":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\shared\\layout\\header\\header.tsx","dependencies":[{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\shared\\layout\\header\\header.tsx","mtime":1580568107595},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import './header.scss';\r\nimport React, { useState } from 'react';\r\nimport { Translate, Storage } from 'react-jhipster';\r\nimport { Navbar, Nav, NavbarToggler, Collapse } from 'reactstrap';\r\nimport LoadingBar from 'react-redux-loading-bar';\r\nimport { Home, Brand } from './header-components';\r\nimport { AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from '../menus';\r\nconst Header = (props) => {\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const handleLocaleChange = event => {\r\n        const langKey = event.target.value;\r\n        Storage.session.set('locale', langKey);\r\n        props.onLocaleChange(langKey);\r\n    };\r\n    const renderDevRibbon = () => props.isInProduction === false ? (React.createElement(\"div\", { className: \"ribbon dev\" },\r\n        React.createElement(\"a\", { href: \"\" },\r\n            React.createElement(Translate, { contentKey: `global.ribbon.${props.ribbonEnv}` })))) : null;\r\n    const toggleMenu = () => setMenuOpen(!menuOpen);\r\n    /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\r\n    return (React.createElement(\"div\", { id: \"app-header\" },\r\n        renderDevRibbon(),\r\n        React.createElement(LoadingBar, { className: \"loading-bar\" }),\r\n        React.createElement(Navbar, { dark: true, expand: \"sm\", fixed: \"top\", className: \"bg-primary\" },\r\n            React.createElement(NavbarToggler, { \"aria-label\": \"Menu\", onClick: toggleMenu }),\r\n            React.createElement(Brand, null),\r\n            React.createElement(Collapse, { isOpen: menuOpen, navbar: true },\r\n                React.createElement(Nav, { id: \"header-tabs\", className: \"ml-auto\", navbar: true },\r\n                    React.createElement(Home, null),\r\n                    props.isAuthenticated && React.createElement(EntitiesMenu, null),\r\n                    props.isAuthenticated && props.isAdmin && (React.createElement(AdminMenu, { showSwagger: props.isSwaggerEnabled, showDatabase: !props.isInProduction })),\r\n                    React.createElement(LocaleMenu, { currentLocale: props.currentLocale, onClick: handleLocaleChange }),\r\n                    React.createElement(AccountMenu, { isAuthenticated: props.isAuthenticated }))))));\r\n};\r\nexport default Header;\r\n",{"version":3,"file":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\shared\\layout\\header\\header.tsx","sourceRoot":"","sources":["C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\shared\\layout\\header\\header.tsx"],"names":[],"mappings":"AAAA,OAAO,eAAe,CAAC;AAEvB,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,aAAa,EAAe,QAAQ,EAAE,MAAM,YAAY,CAAC;AAI/E,OAAO,UAAU,MAAM,yBAAyB,CAAC;AAEjD,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AAY5E,MAAM,MAAM,GAAG,CAAC,KAAmB,EAAE,EAAE;IACrC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEhD,MAAM,kBAAkB,GAAG,KAAK,CAAC,EAAE;QACjC,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACvC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,GAAG,EAAE,CAC3B,KAAK,CAAC,cAAc,KAAK,KAAK,CAAC,CAAC,CAAC,CAC/B,6BAAK,SAAS,EAAC,YAAY;QACzB,2BAAG,IAAI,EAAC,EAAE;YACR,oBAAC,SAAS,IAAC,UAAU,EAAE,iBAAiB,KAAK,CAAC,SAAS,EAAE,GAAI,CAC3D,CACA,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;IAEX,MAAM,UAAU,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;IAEhD,iFAAiF;IAEjF,OAAO,CACL,6BAAK,EAAE,EAAC,YAAY;QACjB,eAAe,EAAE;QAClB,oBAAC,UAAU,IAAC,SAAS,EAAC,aAAa,GAAG;QACtC,oBAAC,MAAM,IAAC,IAAI,QAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,YAAY;YACzD,oBAAC,aAAa,kBAAY,MAAM,EAAC,OAAO,EAAE,UAAU,GAAI;YACxD,oBAAC,KAAK,OAAG;YACT,oBAAC,QAAQ,IAAC,MAAM,EAAE,QAAQ,EAAE,MAAM;gBAChC,oBAAC,GAAG,IAAC,EAAE,EAAC,aAAa,EAAC,SAAS,EAAC,SAAS,EAAC,MAAM;oBAC9C,oBAAC,IAAI,OAAG;oBACP,KAAK,CAAC,eAAe,IAAI,oBAAC,YAAY,OAAG;oBACzC,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,OAAO,IAAI,CACzC,oBAAC,SAAS,IAAC,WAAW,EAAE,KAAK,CAAC,gBAAgB,EAAE,YAAY,EAAE,CAAC,KAAK,CAAC,cAAc,GAAI,CACxF;oBACD,oBAAC,UAAU,IAAC,aAAa,EAAE,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,kBAAkB,GAAI;oBAC/E,oBAAC,WAAW,IAAC,eAAe,EAAE,KAAK,CAAC,eAAe,GAAI,CACnD,CACG,CACJ,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import './header.scss';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Translate, Storage } from 'react-jhipster';\r\nimport { Navbar, Nav, NavbarToggler, NavbarBrand, Collapse } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport LoadingBar from 'react-redux-loading-bar';\r\n\r\nimport { Home, Brand } from './header-components';\r\nimport { AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from '../menus';\r\n\r\nexport interface IHeaderProps {\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n  ribbonEnv: string;\r\n  isInProduction: boolean;\r\n  isSwaggerEnabled: boolean;\r\n  currentLocale: string;\r\n  onLocaleChange: Function;\r\n}\r\n\r\nconst Header = (props: IHeaderProps) => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const handleLocaleChange = event => {\r\n    const langKey = event.target.value;\r\n    Storage.session.set('locale', langKey);\r\n    props.onLocaleChange(langKey);\r\n  };\r\n\r\n  const renderDevRibbon = () =>\r\n    props.isInProduction === false ? (\r\n      <div className=\"ribbon dev\">\r\n        <a href=\"\">\r\n          <Translate contentKey={`global.ribbon.${props.ribbonEnv}`} />\r\n        </a>\r\n      </div>\r\n    ) : null;\r\n\r\n  const toggleMenu = () => setMenuOpen(!menuOpen);\r\n\r\n  /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\r\n\r\n  return (\r\n    <div id=\"app-header\">\r\n      {renderDevRibbon()}\r\n      <LoadingBar className=\"loading-bar\" />\r\n      <Navbar dark expand=\"sm\" fixed=\"top\" className=\"bg-primary\">\r\n        <NavbarToggler aria-label=\"Menu\" onClick={toggleMenu} />\r\n        <Brand />\r\n        <Collapse isOpen={menuOpen} navbar>\r\n          <Nav id=\"header-tabs\" className=\"ml-auto\" navbar>\r\n            <Home />\r\n            {props.isAuthenticated && <EntitiesMenu />}\r\n            {props.isAuthenticated && props.isAdmin && (\r\n              <AdminMenu showSwagger={props.isSwaggerEnabled} showDatabase={!props.isInProduction} />\r\n            )}\r\n            <LocaleMenu currentLocale={props.currentLocale} onClick={handleLocaleChange} />\r\n            <AccountMenu isAuthenticated={props.isAuthenticated} />\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"]}]}