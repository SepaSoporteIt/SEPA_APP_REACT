{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\industry-type\\industry-type-detail.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\industry-type\\industry-type-detail.tsx","mtime":1584152541782},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './industry-type.reducer';\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nexport class IndustryTypeDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        const { industryTypeEntity } = this.props;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.industryType.detail.title\" }, \"IndustryType\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, industryTypeEntity.name),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"name\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.industryType.name\" }, \"Name\"))),\r\n                    React.createElement(\"dd\", null, industryTypeEntity.name),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"ciiu\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.industryType.ciiu\" }, \"Ciiu\"))),\r\n                    React.createElement(\"dd\", null, industryTypeEntity.ciiu),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"createdAt\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.industryType.createdAt\" }, \"Created At\"))),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: industryTypeEntity.createdAt, type: \"date\", format: APP_DATE_FORMAT })),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"updatedAt\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.industryType.updatedAt\" }, \"Updated At\"))),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: industryTypeEntity.updatedAt, type: \"date\", format: APP_DATE_FORMAT }))),\r\n                React.createElement(Button, { tag: Link, to: \"/industry-type\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: `/industry-type/${industryTypeEntity.id}/edit`, replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ industryType }) => ({\r\n    industryTypeEntity: industryType.entity\r\n});\r\nconst mapDispatchToProps = { getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndustryTypeDetail);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\industry-type\\industry-type-detail.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\industry-type\\industry-type-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './industry-type.reducer';\r\nimport { IIndustryType } from 'app/shared/model/industry-type.model';\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IIndustryTypeDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class IndustryTypeDetail extends React.Component<IIndustryTypeDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { industryTypeEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"sepaApp.industryType.detail.title\">IndustryType</Translate> [<b>{industryTypeEntity.name}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"name\">\r\n                <Translate contentKey=\"sepaApp.industryType.name\">Name</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{industryTypeEntity.name}</dd>\r\n            <dt>\r\n              <span id=\"ciiu\">\r\n                <Translate contentKey=\"sepaApp.industryType.ciiu\">Ciiu</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{industryTypeEntity.ciiu}</dd>\r\n            <dt>\r\n              <span id=\"createdAt\">\r\n                <Translate contentKey=\"sepaApp.industryType.createdAt\">Created At</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={industryTypeEntity.createdAt} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"updatedAt\">\r\n                <Translate contentKey=\"sepaApp.industryType.updatedAt\">Updated At</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={industryTypeEntity.updatedAt} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/industry-type\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/industry-type/${industryTypeEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ industryType }: IRootState) => ({\r\n  industryTypeEntity: industryType.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IndustryTypeDetail);\r\n"]}]}