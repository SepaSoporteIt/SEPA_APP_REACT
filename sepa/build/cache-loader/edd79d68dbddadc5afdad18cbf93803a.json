{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\company\\company-delete-dialog.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\company\\company-delete-dialog.tsx","mtime":1584152541769},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity, deleteEntity } from './company.reducer';\r\nexport const CompanyDeleteDialog = (props) => {\r\n    useEffect(() => {\r\n        props.getEntity(props.match.params.id);\r\n    }, []);\r\n    const handleClose = () => {\r\n        props.history.push('/company');\r\n    };\r\n    useEffect(() => {\r\n        if (props.updateSuccess) {\r\n            handleClose();\r\n        }\r\n    }, [props.updateSuccess]);\r\n    const confirmDelete = () => {\r\n        props.deleteEntity(props.companyEntity.id);\r\n    };\r\n    const { companyEntity } = props;\r\n    return (React.createElement(Modal, { isOpen: true, toggle: handleClose },\r\n        React.createElement(ModalHeader, { toggle: handleClose },\r\n            React.createElement(Translate, { contentKey: \"entity.delete.title\" }, \"Confirm delete operation\")),\r\n        React.createElement(ModalBody, { id: \"sepaApp.company.delete.question\" },\r\n            React.createElement(Translate, { contentKey: \"sepaApp.company.delete.question\", interpolate: { id: companyEntity.id } }, \"Are you sure you want to delete this Company?\")),\r\n        React.createElement(ModalFooter, null,\r\n            React.createElement(Button, { color: \"secondary\", onClick: handleClose },\r\n                React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\r\n                \"\\u00A0\",\r\n                React.createElement(Translate, { contentKey: \"entity.action.cancel\" }, \"Cancel\")),\r\n            React.createElement(Button, { id: \"jhi-confirm-delete-company\", color: \"danger\", onClick: confirmDelete },\r\n                React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                \"\\u00A0\",\r\n                React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))));\r\n};\r\nconst mapStateToProps = ({ company }) => ({\r\n    companyEntity: company.entity,\r\n    updateSuccess: company.updateSuccess\r\n});\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyDeleteDialog);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\company\\company-delete-dialog.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\company\\company-delete-dialog.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAChF,OAAO,EAAE,SAAS,EAAqC,MAAM,gBAAgB,CAAC;AAC9E,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAIjE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAI5D,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,KAAgC,EAAE,EAAE;IACtE,SAAS,CAAC,GAAG,EAAE;QACb,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,KAAK,CAAC,aAAa,EAAE;YACvB,WAAW,EAAE,CAAC;SACf;IACH,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IAE1B,MAAM,aAAa,GAAG,GAAG,EAAE;QACzB,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;IAChC,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,WAAW;QAC/B,oBAAC,WAAW,IAAC,MAAM,EAAE,WAAW;YAC9B,oBAAC,SAAS,IAAC,UAAU,EAAC,qBAAqB,+BAAqC,CACpE;QACd,oBAAC,SAAS,IAAC,EAAE,EAAC,iCAAiC;YAC7C,oBAAC,SAAS,IAAC,UAAU,EAAC,iCAAiC,EAAC,WAAW,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,oDAEjF,CACF;QACZ,oBAAC,WAAW;YACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,WAAW;gBAC5C,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;gBAE9B,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD;YACT,oBAAC,MAAM,IAAC,EAAE,EAAC,4BAA4B,EAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,aAAa;gBAC3E,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;gBAEhC,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD,CACG,CACR,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,EAAE,OAAO,EAAc,EAAE,EAAE,CAAC,CAAC;IACpD,aAAa,EAAE,OAAO,CAAC,MAAM;IAC7B,aAAa,EAAE,OAAO,CAAC,aAAa;CACrC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;AAKvD,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ICompany } from 'app/shared/model/company.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './company.reducer';\r\n\r\nexport interface ICompanyDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport const CompanyDeleteDialog = (props: ICompanyDeleteDialogProps) => {\r\n  useEffect(() => {\r\n    props.getEntity(props.match.params.id);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    props.history.push('/company');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.updateSuccess) {\r\n      handleClose();\r\n    }\r\n  }, [props.updateSuccess]);\r\n\r\n  const confirmDelete = () => {\r\n    props.deleteEntity(props.companyEntity.id);\r\n  };\r\n\r\n  const { companyEntity } = props;\r\n  return (\r\n    <Modal isOpen toggle={handleClose}>\r\n      <ModalHeader toggle={handleClose}>\r\n        <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n      </ModalHeader>\r\n      <ModalBody id=\"sepaApp.company.delete.question\">\r\n        <Translate contentKey=\"sepaApp.company.delete.question\" interpolate={{ id: companyEntity.id }}>\r\n          Are you sure you want to delete this Company?\r\n        </Translate>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"secondary\" onClick={handleClose}>\r\n          <FontAwesomeIcon icon=\"ban\" />\r\n          &nbsp;\r\n          <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n        </Button>\r\n        <Button id=\"jhi-confirm-delete-company\" color=\"danger\" onClick={confirmDelete}>\r\n          <FontAwesomeIcon icon=\"trash\" />\r\n          &nbsp;\r\n          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ company }: IRootState) => ({\r\n  companyEntity: company.entity,\r\n  updateSuccess: company.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyDeleteDialog);\r\n"]}]}