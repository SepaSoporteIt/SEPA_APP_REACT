{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration.tsx","mtime":1588426126959},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, InputGroup, Col, Row, Table } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\nimport { Translate, translate, TextFormat, getSortState } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getSearchEntities, getEntities, reset } from './expiration.reducer';\r\nimport { APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\nexport class Expiration extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = Object.assign({ search: '' }, getSortState(this.props.location, ITEMS_PER_PAGE));\r\n        this.search = () => {\r\n            if (this.state.search) {\r\n                this.props.reset();\r\n                this.setState({ activePage: 1 }, () => {\r\n                    const { activePage, itemsPerPage, sort, order, search } = this.state;\r\n                    this.props.getSearchEntities(search, activePage - 1, itemsPerPage, `${sort},${order}`);\r\n                });\r\n            }\r\n        };\r\n        this.clear = () => {\r\n            this.props.reset();\r\n            this.setState({ search: '', activePage: 1 }, () => {\r\n                this.props.getEntities();\r\n            });\r\n        };\r\n        this.handleSearch = event => this.setState({ search: event.target.value });\r\n        this.reset = () => {\r\n            this.props.reset();\r\n            this.setState({ activePage: 1 }, () => {\r\n                this.getEntities();\r\n            });\r\n        };\r\n        this.handleLoadMore = () => {\r\n            if (window.pageYOffset > 0) {\r\n                this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\r\n            }\r\n        };\r\n        this.sort = prop => () => {\r\n            this.setState({\r\n                order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n                sort: prop\r\n            }, () => {\r\n                this.reset();\r\n            });\r\n        };\r\n        this.getEntities = () => {\r\n            const { activePage, itemsPerPage, sort, order, search } = this.state;\r\n            if (search) {\r\n                this.props.getSearchEntities(search, activePage - 1, itemsPerPage, `${sort},${order}`);\r\n            }\r\n            else {\r\n                this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n            }\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.reset();\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.updateSuccess) {\r\n            this.reset();\r\n        }\r\n    }\r\n    render() {\r\n        const { expirationList, match } = this.props;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"expiration-heading\" },\r\n                React.createElement(Translate, { contentKey: \"sepaApp.expiration.home.title\" }, \"Expirations\"),\r\n                React.createElement(Link, { to: `${match.url}/new`, className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.expiration.home.createLabel\" }, \"Create a new Expiration\"))),\r\n            React.createElement(Row, null,\r\n                React.createElement(Col, { sm: \"12\" },\r\n                    React.createElement(AvForm, { onSubmit: this.search },\r\n                        React.createElement(AvGroup, null,\r\n                            React.createElement(InputGroup, null,\r\n                                React.createElement(AvInput, { type: \"text\", name: \"search\", value: this.state.search, onChange: this.handleSearch, placeholder: translate('sepaApp.expiration.home.search') }),\r\n                                React.createElement(Button, { className: \"input-group-addon\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"search\" })),\r\n                                React.createElement(Button, { type: \"reset\", className: \"input-group-addon\", onClick: this.clear },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }))))))),\r\n            React.createElement(\"div\", { className: \"table-responsive\" },\r\n                React.createElement(InfiniteScroll, { pageStart: this.state.activePage, loadMore: this.handleLoadMore, hasMore: this.state.activePage - 1 < this.props.links.next, loader: React.createElement(\"div\", { className: \"loader\" }, \"Loading ...\"), threshold: 0, initialLoad: false }, expirationList && expirationList.length > 0 ? (React.createElement(Table, { responsive: true, \"aria-describedby\": \"expiration-heading\" },\r\n                    React.createElement(\"thead\", null,\r\n                        React.createElement(\"tr\", null,\r\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('uniqueCode') },\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.uniqueCode\" }, \"Unique Code\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.company\" }, \"Company\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('responsible') },\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.responsible\" }, \"Responsible\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.study\" }, \"Study\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('status') },\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.status\" }, \"Status\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('startDate') },\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.startDate\" }, \"Start Date\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('endDate') },\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.endDate\" }, \"End Date\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('isCompleted') },\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.isCompleted\" }, \"Is Completed\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"sepaApp.expiration.employee\" }, \"Employee\"),\r\n                                \" \",\r\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                            React.createElement(\"th\", null))),\r\n                    React.createElement(\"tbody\", null, expirationList.map((expiration, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${expiration.id}`, color: \"link\", size: \"sm\" }, expiration.uniqueCode)),\r\n                        React.createElement(\"td\", null, expiration.company ? React.createElement(Link, { to: `company/${expiration.company.id}` }, expiration.company.name + \" - \" + expiration.company.addressDirection + \" \" + expiration.company.addressNumber) : React.createElement(Translate, { contentKey: \"sepaApp.expiration.errors.noCompany\" }, \"No Company Assigned\")),\r\n                        React.createElement(\"td\", null, expiration.responsible ? expiration.responsible : expiration.company ? React.createElement(Translate, { contentKey: \"sepaApp.expiration.errors.noResponsible\" }, \"No Employee Assigned in the selected Company\") : React.createElement(Translate, { contentKey: \"sepaApp.expiration.errors.noCompany\" }, \"No Company Assigned\")),\r\n                        React.createElement(\"td\", null, expiration.study ? React.createElement(Link, { to: `study/${expiration.study.id}` }, expiration.study.name) : ''),\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(Translate, { contentKey: `sepaApp.Status.${expiration.status}` })),\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(TextFormat, { type: \"date\", value: expiration.startDate, format: APP_LOCAL_DATE_FORMAT })),\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(TextFormat, { type: \"date\", value: expiration.endDate, format: APP_LOCAL_DATE_FORMAT })),\r\n                        React.createElement(\"td\", null, expiration.isCompleted ? React.createElement(Translate, { contentKey: \"sepaApp.expiration.booleans.true\" }, \"true\") : React.createElement(Translate, { contentKey: \"sepaApp.expiration.booleans.false\" }, \"false\")),\r\n                        React.createElement(\"td\", null, expiration.employee ? React.createElement(Link, { to: `employee/${expiration.employee.id}` }, expiration.employee.name + \" \" + expiration.employee.surname) : React.createElement(Translate, { contentKey: \"sepaApp.expiration.errors.noEmployee\" }, \"No Employee Assigned\")),\r\n                        React.createElement(\"td\", { className: \"text-right\" },\r\n                            React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\r\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${expiration.id}`, color: \"info\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\r\n                                    ' ',\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\r\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${expiration.id}/edit`, color: \"primary\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                                    ' ',\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\r\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${expiration.id}/delete`, color: \"danger\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                                    ' ',\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.expiration.home.notFound\" }, \"No Expirations found\")))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ expiration }) => ({\r\n    expirationList: expiration.entities,\r\n    totalItems: expiration.totalItems,\r\n    links: expiration.links,\r\n    entity: expiration.entity,\r\n    updateSuccess: expiration.updateSuccess\r\n});\r\nconst mapDispatchToProps = {\r\n    getSearchEntities,\r\n    getEntities,\r\n    reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Expiration);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, InputGroup, Col, Row, Table } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\nimport {\r\n  byteSize,\r\n  Translate,\r\n  translate,\r\n  ICrudSearchAction,\r\n  ICrudGetAllAction,\r\n  TextFormat,\r\n  getSortState,\r\n  IPaginationBaseState\r\n} from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSearchEntities, getEntities, reset } from './expiration.reducer';\r\nimport { IExpiration } from 'app/shared/model/expiration.model';\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IExpirationProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport interface IExpirationState extends IPaginationBaseState {\r\n  search: string;\r\n}\r\n\r\nexport class Expiration extends React.Component<IExpirationProps, IExpirationState> {\r\n  state: IExpirationState = {\r\n    search: '',\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.reset();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.updateSuccess) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  search = () => {\r\n    if (this.state.search) {\r\n      this.props.reset();\r\n      this.setState({ activePage: 1 }, () => {\r\n        const { activePage, itemsPerPage, sort, order, search } = this.state;\r\n        this.props.getSearchEntities(search, activePage - 1, itemsPerPage, `${sort},${order}`);\r\n      });\r\n    }\r\n  };\r\n\r\n  clear = () => {\r\n    this.props.reset();\r\n    this.setState({ search: '', activePage: 1 }, () => {\r\n      this.props.getEntities();\r\n    });\r\n  };\r\n\r\n  handleSearch = event => this.setState({ search: event.target.value });\r\n\r\n  reset = () => {\r\n    this.props.reset();\r\n    this.setState({ activePage: 1 }, () => {\r\n      this.getEntities();\r\n    });\r\n  };\r\n\r\n  handleLoadMore = () => {\r\n    if (window.pageYOffset > 0) {\r\n      this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\r\n    }\r\n  };\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => {\r\n        this.reset();\r\n      }\r\n    );\r\n  };\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order, search } = this.state;\r\n    if (search) {\r\n      this.props.getSearchEntities(search, activePage - 1, itemsPerPage, `${sort},${order}`);\r\n    } else {\r\n      this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { expirationList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"expiration-heading\">\r\n          <Translate contentKey=\"sepaApp.expiration.home.title\">Expirations</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"sepaApp.expiration.home.createLabel\">Create a new Expiration</Translate>\r\n          </Link>\r\n        </h2>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <AvForm onSubmit={this.search}>\r\n              <AvGroup>\r\n                <InputGroup>\r\n                  <AvInput\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    value={this.state.search}\r\n                    onChange={this.handleSearch}\r\n                    placeholder={translate('sepaApp.expiration.home.search')}\r\n                  />\r\n                  <Button className=\"input-group-addon\">\r\n                    <FontAwesomeIcon icon=\"search\" />\r\n                  </Button>\r\n                  <Button type=\"reset\" className=\"input-group-addon\" onClick={this.clear}>\r\n                    <FontAwesomeIcon icon=\"trash\" />\r\n                  </Button>\r\n                </InputGroup>\r\n              </AvGroup>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n          <InfiniteScroll\r\n            pageStart={this.state.activePage}\r\n            loadMore={this.handleLoadMore}\r\n            hasMore={this.state.activePage - 1 < this.props.links.next}\r\n            loader={<div className=\"loader\">Loading ...</div>}\r\n            threshold={0}\r\n            initialLoad={false}\r\n          >\r\n            {expirationList && expirationList.length > 0 ? (\r\n              <Table responsive aria-describedby=\"expiration-heading\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"hand\" onClick={this.sort('uniqueCode')}>\r\n                      <Translate contentKey=\"sepaApp.expiration.uniqueCode\">Unique Code</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th>\r\n                      <Translate contentKey=\"sepaApp.expiration.company\">Company</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th className=\"hand\" onClick={this.sort('responsible')}>\r\n                      <Translate contentKey=\"sepaApp.expiration.responsible\">Responsible</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th>\r\n                      <Translate contentKey=\"sepaApp.expiration.study\">Study</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th className=\"hand\" onClick={this.sort('status')}>\r\n                      <Translate contentKey=\"sepaApp.expiration.status\">Status</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th className=\"hand\" onClick={this.sort('startDate')}>\r\n                      <Translate contentKey=\"sepaApp.expiration.startDate\">Start Date</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th className=\"hand\" onClick={this.sort('endDate')}>\r\n                      <Translate contentKey=\"sepaApp.expiration.endDate\">End Date</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th className=\"hand\" onClick={this.sort('isCompleted')}>\r\n                      <Translate contentKey=\"sepaApp.expiration.isCompleted\">Is Completed</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th>\r\n                      <Translate contentKey=\"sepaApp.expiration.employee\">Employee</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                    </th>\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {expirationList.map((expiration, i) => (\r\n                    <tr key={`entity-${i}`}>\r\n                      <td>\r\n                        <Button tag={Link} to={`${match.url}/${expiration.id}`} color=\"link\" size=\"sm\">\r\n                          {expiration.uniqueCode}\r\n                        </Button>\r\n                      </td>\r\n                      <td>\r\n                        {expiration.company ? <Link to={`company/${expiration.company.id}`}>{expiration.company.name + \" - \" + expiration.company.addressDirection + \" \" + expiration.company.addressNumber}</Link> : <Translate contentKey=\"sepaApp.expiration.errors.noCompany\">No Company Assigned</Translate>}\r\n                      </td>\r\n\r\n                      <td>\r\n                        {expiration.responsible ? expiration.responsible : expiration.company ? <Translate contentKey=\"sepaApp.expiration.errors.noResponsible\">No Employee Assigned in the selected Company</Translate> : <Translate contentKey=\"sepaApp.expiration.errors.noCompany\">No Company Assigned</Translate>}\r\n                      </td>\r\n                      <td>{expiration.study ? <Link to={`study/${expiration.study.id}`}>{expiration.study.name}</Link> : ''}</td>\r\n                      <td>\r\n                        <Translate contentKey={`sepaApp.Status.${expiration.status}`} />\r\n                      </td>\r\n                      <td>\r\n                        <TextFormat type=\"date\" value={expiration.startDate} format={APP_LOCAL_DATE_FORMAT} />\r\n                      </td>\r\n                      <td>\r\n                        <TextFormat type=\"date\" value={expiration.endDate} format={APP_LOCAL_DATE_FORMAT} />\r\n                      </td>\r\n                      <td>{expiration.isCompleted ? <Translate contentKey=\"sepaApp.expiration.booleans.true\">true</Translate> : <Translate contentKey=\"sepaApp.expiration.booleans.false\">false</Translate>}</td>\r\n                      <td>\r\n                        {expiration.employee ? <Link to={`employee/${expiration.employee.id}`}>{expiration.employee.name + \" \" + expiration.employee.surname}</Link> : <Translate contentKey=\"sepaApp.expiration.errors.noEmployee\">No Employee Assigned</Translate>}\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <div className=\"btn-group flex-btn-group-container\">\r\n                          <Button tag={Link} to={`${match.url}/${expiration.id}`} color=\"info\" size=\"sm\">\r\n                            <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                            <span className=\"d-none d-md-inline\">\r\n                              <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                            </span>\r\n                          </Button>\r\n                          <Button tag={Link} to={`${match.url}/${expiration.id}/edit`} color=\"primary\" size=\"sm\">\r\n                            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                            <span className=\"d-none d-md-inline\">\r\n                              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                            </span>\r\n                          </Button>\r\n                          <Button tag={Link} to={`${match.url}/${expiration.id}/delete`} color=\"danger\" size=\"sm\">\r\n                            <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                            <span className=\"d-none d-md-inline\">\r\n                              <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <div className=\"alert alert-warning\">\r\n                <Translate contentKey=\"sepaApp.expiration.home.notFound\">No Expirations found</Translate>\r\n              </div>\r\n            )}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ expiration }: IRootState) => ({\r\n  expirationList: expiration.entities,\r\n  totalItems: expiration.totalItems,\r\n  links: expiration.links,\r\n  entity: expiration.entity,\r\n  updateSuccess: expiration.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSearchEntities,\r\n  getEntities,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Expiration);\r\n"]}]}