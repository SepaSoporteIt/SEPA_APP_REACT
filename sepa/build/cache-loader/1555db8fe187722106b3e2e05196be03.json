{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-update.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-update.tsx","mtime":1584152541774},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getLocalidadandpartidos } from 'app/entities/localidadandpartido/localidadandpartido.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './employee.reducer';\r\nimport { convertDateTimeFromServer, convertDateTimeToServer, displayDefaultDateTime } from 'app/shared/util/date-utils';\r\nexport const EmployeeUpdate = (props) => {\r\n    const [localidadIdId, setLocalidadIdId] = useState('0');\r\n    const [partidoIdId, setPartidoIdId] = useState('0');\r\n    const [isNew, setIsNew] = useState(!props.match.params || !props.match.params.id);\r\n    const { employeeEntity, localidadandpartidos, loading, updating } = props;\r\n    const handleClose = () => {\r\n        props.history.push('/employee');\r\n    };\r\n    useEffect(() => {\r\n        if (!isNew) {\r\n            props.getEntity(props.match.params.id);\r\n        }\r\n        props.getLocalidadandpartidos();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (props.updateSuccess) {\r\n            handleClose();\r\n        }\r\n    }, [props.updateSuccess]);\r\n    const saveEntity = (event, errors, values) => {\r\n        values.createdAt = convertDateTimeToServer(values.createdAt);\r\n        values.updatedAt = convertDateTimeToServer(values.updatedAt);\r\n        if (errors.length === 0) {\r\n            const entity = Object.assign({}, employeeEntity, values);\r\n            if (isNew) {\r\n                props.createEntity(entity);\r\n            }\r\n            else {\r\n                props.updateEntity(entity);\r\n            }\r\n        }\r\n    };\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(Row, { className: \"justify-content-center\" },\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", { id: \"sepaApp.employee.home.createOrEditLabel\" },\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.home.createOrEditLabel\" }, \"Create or edit a Employee\")))),\r\n        React.createElement(Row, { className: \"justify-content-center\" },\r\n            React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : employeeEntity, onSubmit: saveEntity },\r\n                !isNew ? (React.createElement(AvGroup, null,\r\n                    React.createElement(Label, { for: \"employee-id\" },\r\n                        React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                    React.createElement(AvInput, { id: \"employee-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                React.createElement(AvGroup, null,\r\n                    React.createElement(\"h3\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.personalData\" }, \"Personal Data\")),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"nameLabel\", for: \"employee-name\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.name\" }, \"Name\")),\r\n                        React.createElement(AvField, { id: \"employee-name\", type: \"text\", name: \"name\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"surnameLabel\", for: \"employee-surname\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.surname\" }, \"Surname\")),\r\n                        React.createElement(AvField, { id: \"employee-surname\", type: \"text\", name: \"surname\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"tlfLabel\", for: \"employee-tlf\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.tlf\" }, \"Tlf\")),\r\n                        React.createElement(AvField, { id: \"employee-tlf\", type: \"text\", name: \"tlf\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"celularLabel\", for: \"employee-celular\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.celular\" }, \"Celular\")),\r\n                        React.createElement(AvField, { id: \"employee-celular\", type: \"text\", name: \"celular\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"emailLabel\", for: \"employee-email\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.email\" }, \"Email\")),\r\n                        React.createElement(AvField, { id: \"employee-email\", type: \"text\", name: \"email\" }))),\r\n                React.createElement(AvGroup, null,\r\n                    React.createElement(\"h3\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.matData\" }, \"Tuition Data\")),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"matNumberLabel\", for: \"employee-matNumber\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.matNumber\" }, \"Mat Number\")),\r\n                        React.createElement(AvField, { id: \"employee-matNumber\", type: \"text\", name: \"matNumber\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"cuitLabel\", for: \"employee-cuit\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.cuit\" }, \"Cuit\")),\r\n                        React.createElement(AvField, { id: \"employee-cuit\", type: \"text\", name: \"cuit\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"degreeLabel\", for: \"employee-degree\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.degree\" }, \"Degree\")),\r\n                        React.createElement(AvField, { id: \"employee-degree\", type: \"text\", name: \"degree\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"especializacionLabel\", for: \"employee-especializacion\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.especializacion\" }, \"Especializacion\")),\r\n                        React.createElement(AvField, { id: \"employee-especializacion\", type: \"text\", name: \"especializacion\" }))),\r\n                React.createElement(AvGroup, null,\r\n                    React.createElement(\"h3\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.addressData\" }, \"Address Data\")),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"addressDirectionLabel\", for: \"employee-addressDirection\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.addressDirection\" }, \"Address Direction\")),\r\n                        React.createElement(AvField, { id: \"employee-addressDirection\", type: \"text\", name: \"addressDirection\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"addressNumberLabel\", for: \"employee-addressNumber\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.addressNumber\" }, \"Address Number\")),\r\n                        React.createElement(AvField, { id: \"employee-addressNumber\", type: \"text\", name: \"addressNumber\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"floorLabel\", for: \"employee-floor\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.floor\" }, \"Floor\")),\r\n                        React.createElement(AvField, { id: \"employee-floor\", type: \"text\", name: \"floor\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"departamentLabel\", for: \"employee-departament\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.departament\" }, \"Departament\")),\r\n                        React.createElement(AvField, { id: \"employee-departament\", type: \"text\", name: \"departament\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"employee-localidadId\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.localidadId\" }, \"Localidad Id\")),\r\n                        React.createElement(AvInput, { id: \"employee-localidadId\", type: \"select\", className: \"form-control\", name: \"localidadId.id\" },\r\n                            React.createElement(\"option\", { value: \"\", key: \"0\" }),\r\n                            localidadandpartidos\r\n                                ? localidadandpartidos.map(otherEntity => (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.localidad)))\r\n                                : null)),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"employee-partidoId\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.partidoId\" }, \"Partido Id\")),\r\n                        React.createElement(AvInput, { id: \"employee-partidoId\", type: \"select\", className: \"form-control\", name: \"partidoId.id\" },\r\n                            React.createElement(\"option\", { value: \"\", key: \"0\" }),\r\n                            localidadandpartidos\r\n                                ? localidadandpartidos.map(otherEntity => (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.partido)))\r\n                                : null))),\r\n                React.createElement(AvGroup, null,\r\n                    React.createElement(\"h3\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.others\" }, \"Others\")),\r\n                    React.createElement(AvGroup, { check: true },\r\n                        React.createElement(Label, { id: \"isInternalLabel\" },\r\n                            React.createElement(AvInput, { id: \"employee-isInternal\", type: \"checkbox\", className: \"form-check-input\", name: \"isInternal\" }),\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.isInternal\" }, \"Is Internal\"))),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"comentarioLabel\", for: \"employee-comentario\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.comentario\" }, \"Comentario\")),\r\n                        React.createElement(AvField, { id: \"employee-comentario\", type: \"text\", name: \"comentario\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"createdAtLabel\", for: \"employee-createdAt\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.createdAt\" }, \"Created At\")),\r\n                        React.createElement(AvInput, { id: \"employee-createdAt\", type: \"datetime-local\", className: \"form-control\", name: \"createdAt\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? displayDefaultDateTime() : convertDateTimeFromServer(props.employeeEntity.createdAt) })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"updatedAtLabel\", for: \"employee-updatedAt\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.employee.updatedAt\" }, \"Updated At\")),\r\n                        React.createElement(AvInput, { id: \"employee-updatedAt\", type: \"datetime-local\", className: \"form-control\", name: \"updatedAt\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? displayDefaultDateTime() : convertDateTimeFromServer(props.employeeEntity.updatedAt) }))),\r\n                React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/employee\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n};\r\nconst mapStateToProps = (storeState) => ({\r\n    localidadandpartidos: storeState.localidadandpartido.entities,\r\n    employeeEntity: storeState.employee.entity,\r\n    loading: storeState.employee.loading,\r\n    updating: storeState.employee.updating,\r\n    updateSuccess: storeState.employee.updateSuccess\r\n});\r\nconst mapDispatchToProps = {\r\n    getLocalidadandpartidos,\r\n    getEntity,\r\n    updateEntity,\r\n    createEntity,\r\n    reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeUpdate);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-update.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvFeedback, AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { ILocalidadandpartido } from 'app/shared/model/localidadandpartido.model';\r\nimport { getEntities as getLocalidadandpartidos } from 'app/entities/localidadandpartido/localidadandpartido.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './employee.reducer';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\nimport { convertDateTimeFromServer, convertDateTimeToServer, displayDefaultDateTime } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IEmployeeUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport const EmployeeUpdate = (props: IEmployeeUpdateProps) => {\r\n  const [localidadIdId, setLocalidadIdId] = useState('0');\r\n  const [partidoIdId, setPartidoIdId] = useState('0');\r\n  const [isNew, setIsNew] = useState(!props.match.params || !props.match.params.id);\r\n\r\n  const { employeeEntity, localidadandpartidos, loading, updating } = props;\r\n\r\n  const handleClose = () => {\r\n    props.history.push('/employee');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isNew) {\r\n      props.getEntity(props.match.params.id);\r\n    }\r\n\r\n    props.getLocalidadandpartidos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.updateSuccess) {\r\n      handleClose();\r\n    }\r\n  }, [props.updateSuccess]);\r\n\r\n  const saveEntity = (event, errors, values) => {\r\n    values.createdAt = convertDateTimeToServer(values.createdAt);\r\n    values.updatedAt = convertDateTimeToServer(values.updatedAt);\r\n\r\n    if (errors.length === 0) {\r\n      const entity = {\r\n        ...employeeEntity,\r\n        ...values\r\n      };\r\n\r\n      if (isNew) {\r\n        props.createEntity(entity);\r\n      } else {\r\n        props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md=\"8\">\r\n          <h2 id=\"sepaApp.employee.home.createOrEditLabel\">\r\n            <Translate contentKey=\"sepaApp.employee.home.createOrEditLabel\">Create or edit a Employee</Translate>\r\n          </h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md=\"8\">\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <AvForm model={isNew ? {} : employeeEntity} onSubmit={saveEntity}>\r\n              {!isNew ? (\r\n                <AvGroup>\r\n                  <Label for=\"employee-id\">\r\n                    <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                  </Label>\r\n                  <AvInput id=\"employee-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                </AvGroup>\r\n              ) : null}\r\n\r\n              <AvGroup>\r\n              <h3>\r\n                <Translate contentKey=\"sepaApp.employee.detail.personalData\">Personal Data</Translate>\r\n              </h3>\r\n              <AvGroup>\r\n                <Label id=\"nameLabel\" for=\"employee-name\">\r\n                  <Translate contentKey=\"sepaApp.employee.name\">Name</Translate>\r\n                </Label>\r\n                <AvField\r\n                  id=\"employee-name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  validate={{\r\n                    required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                  }}\r\n                />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"surnameLabel\" for=\"employee-surname\">\r\n                  <Translate contentKey=\"sepaApp.employee.surname\">Surname</Translate>\r\n                </Label>\r\n                <AvField\r\n                  id=\"employee-surname\"\r\n                  type=\"text\"\r\n                  name=\"surname\"\r\n                  validate={{\r\n                    required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                  }}\r\n                />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"tlfLabel\" for=\"employee-tlf\">\r\n                  <Translate contentKey=\"sepaApp.employee.tlf\">Tlf</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-tlf\" type=\"text\" name=\"tlf\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"celularLabel\" for=\"employee-celular\">\r\n                  <Translate contentKey=\"sepaApp.employee.celular\">Celular</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-celular\" type=\"text\" name=\"celular\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"emailLabel\" for=\"employee-email\">\r\n                  <Translate contentKey=\"sepaApp.employee.email\">Email</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-email\" type=\"text\" name=\"email\" />\r\n              </AvGroup>\r\n              </AvGroup>\r\n\r\n              <AvGroup>\r\n              <h3>\r\n                <Translate contentKey=\"sepaApp.employee.detail.matData\">Tuition Data</Translate>\r\n              </h3>\r\n              <AvGroup>\r\n                <Label id=\"matNumberLabel\" for=\"employee-matNumber\">\r\n                  <Translate contentKey=\"sepaApp.employee.matNumber\">Mat Number</Translate>\r\n                </Label>\r\n                <AvField\r\n                  id=\"employee-matNumber\"\r\n                  type=\"text\"\r\n                  name=\"matNumber\"\r\n                  validate={{\r\n                    required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                  }}\r\n                />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"cuitLabel\" for=\"employee-cuit\">\r\n                  <Translate contentKey=\"sepaApp.employee.cuit\">Cuit</Translate>\r\n                </Label>\r\n                <AvField\r\n                  id=\"employee-cuit\"\r\n                  type=\"text\"\r\n                  name=\"cuit\"\r\n                  validate={{\r\n                    required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                  }}\r\n                />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"degreeLabel\" for=\"employee-degree\">\r\n                  <Translate contentKey=\"sepaApp.employee.degree\">Degree</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-degree\" type=\"text\" name=\"degree\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"especializacionLabel\" for=\"employee-especializacion\">\r\n                  <Translate contentKey=\"sepaApp.employee.especializacion\">Especializacion</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-especializacion\" type=\"text\" name=\"especializacion\" />\r\n              </AvGroup>\r\n              </AvGroup>\r\n\r\n              <AvGroup>\r\n              <h3>\r\n                <Translate contentKey=\"sepaApp.employee.detail.addressData\">Address Data</Translate>\r\n              </h3>\r\n              <AvGroup>\r\n                <Label id=\"addressDirectionLabel\" for=\"employee-addressDirection\">\r\n                  <Translate contentKey=\"sepaApp.employee.addressDirection\">Address Direction</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-addressDirection\" type=\"text\" name=\"addressDirection\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"addressNumberLabel\" for=\"employee-addressNumber\">\r\n                  <Translate contentKey=\"sepaApp.employee.addressNumber\">Address Number</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-addressNumber\" type=\"text\" name=\"addressNumber\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"floorLabel\" for=\"employee-floor\">\r\n                  <Translate contentKey=\"sepaApp.employee.floor\">Floor</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-floor\" type=\"text\" name=\"floor\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"departamentLabel\" for=\"employee-departament\">\r\n                  <Translate contentKey=\"sepaApp.employee.departament\">Departament</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-departament\" type=\"text\" name=\"departament\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label for=\"employee-localidadId\">\r\n                  <Translate contentKey=\"sepaApp.employee.localidadId\">Localidad Id</Translate>\r\n                </Label>\r\n                <AvInput id=\"employee-localidadId\" type=\"select\" className=\"form-control\" name=\"localidadId.id\">\r\n                  <option value=\"\" key=\"0\" />\r\n                  {localidadandpartidos\r\n                    ? localidadandpartidos.map(otherEntity => (\r\n                        <option value={otherEntity.id} key={otherEntity.id}>\r\n                          {otherEntity.localidad}\r\n                        </option>\r\n                      ))\r\n                    : null}\r\n                </AvInput>\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label for=\"employee-partidoId\">\r\n                  <Translate contentKey=\"sepaApp.employee.partidoId\">Partido Id</Translate>\r\n                </Label>\r\n                <AvInput id=\"employee-partidoId\" type=\"select\" className=\"form-control\" name=\"partidoId.id\">\r\n                  <option value=\"\" key=\"0\" />\r\n                  {localidadandpartidos\r\n                    ? localidadandpartidos.map(otherEntity => (\r\n                        <option value={otherEntity.id} key={otherEntity.id}>\r\n                          {otherEntity.partido}\r\n                        </option>\r\n                      ))\r\n                    : null}\r\n                </AvInput>\r\n              </AvGroup>\r\n              </AvGroup>\r\n\r\n              <AvGroup>\r\n              <h3>\r\n                <Translate contentKey=\"sepaApp.employee.detail.others\">Others</Translate>\r\n              </h3>\r\n              <AvGroup check>\r\n                <Label id=\"isInternalLabel\">\r\n                  <AvInput id=\"employee-isInternal\" type=\"checkbox\" className=\"form-check-input\" name=\"isInternal\" />\r\n                  <Translate contentKey=\"sepaApp.employee.isInternal\">Is Internal</Translate>\r\n                </Label>\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"comentarioLabel\" for=\"employee-comentario\">\r\n                  <Translate contentKey=\"sepaApp.employee.comentario\">Comentario</Translate>\r\n                </Label>\r\n                <AvField id=\"employee-comentario\" type=\"text\" name=\"comentario\" />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"createdAtLabel\" for=\"employee-createdAt\">\r\n                  <Translate contentKey=\"sepaApp.employee.createdAt\">Created At</Translate>\r\n                </Label>\r\n                <AvInput\r\n                  id=\"employee-createdAt\"\r\n                  type=\"datetime-local\"\r\n                  className=\"form-control\"\r\n                  name=\"createdAt\"\r\n                  placeholder={'YYYY-MM-DD HH:mm'}\r\n                  value={isNew ? displayDefaultDateTime() : convertDateTimeFromServer(props.employeeEntity.createdAt)}\r\n                />\r\n              </AvGroup>\r\n              <AvGroup>\r\n                <Label id=\"updatedAtLabel\" for=\"employee-updatedAt\">\r\n                  <Translate contentKey=\"sepaApp.employee.updatedAt\">Updated At</Translate>\r\n                </Label>\r\n                <AvInput\r\n                  id=\"employee-updatedAt\"\r\n                  type=\"datetime-local\"\r\n                  className=\"form-control\"\r\n                  name=\"updatedAt\"\r\n                  placeholder={'YYYY-MM-DD HH:mm'}\r\n                  value={isNew ? displayDefaultDateTime() : convertDateTimeFromServer(props.employeeEntity.updatedAt)}\r\n                />\r\n              </AvGroup>\r\n              </AvGroup>\r\n         \r\n              <Button tag={Link} id=\"cancel-save\" to=\"/employee\" replace color=\"info\">\r\n                <FontAwesomeIcon icon=\"arrow-left\" />\r\n                &nbsp;\r\n                <span className=\"d-none d-md-inline\">\r\n                  <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                </span>\r\n              </Button>\r\n              &nbsp;\r\n              <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                <FontAwesomeIcon icon=\"save\" />\r\n                &nbsp;\r\n                <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n              </Button>\r\n            </AvForm>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  localidadandpartidos: storeState.localidadandpartido.entities,\r\n  employeeEntity: storeState.employee.entity,\r\n  loading: storeState.employee.loading,\r\n  updating: storeState.employee.updating,\r\n  updateSuccess: storeState.employee.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getLocalidadandpartidos,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeUpdate);\r\n"]}]}