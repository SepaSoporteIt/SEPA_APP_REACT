{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx","mtime":1584152541800},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, Row, Table } from 'reactstrap';\r\nimport { Translate, TextFormat, JhiPagination, JhiItemCount, getSortState } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\nimport { getAudits } from '../administration.reducer';\r\nconst previousMonth = () => {\r\n    const now = new Date();\r\n    const fromDate = now.getMonth() === 0\r\n        ? new Date(now.getFullYear() - 1, 11, now.getDate())\r\n        : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\r\n    return fromDate.toISOString().slice(0, 10);\r\n};\r\nconst today = () => {\r\n    // Today + 1 day - needed if the current day must be included\r\n    const day = new Date();\r\n    day.setDate(day.getDate() + 1);\r\n    const toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n    return toDate.toISOString().slice(0, 10);\r\n};\r\nexport const AuditsPage = (props) => {\r\n    const [pagination, setPagination] = useState(getSortState(props.location, ITEMS_PER_PAGE));\r\n    const [fromDate, setFromDate] = useState(previousMonth());\r\n    const [toDate, setToDate] = useState(today());\r\n    useEffect(() => {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        getAllAudits();\r\n    }, [fromDate, toDate, pagination.activePage, pagination.order, pagination.sort]);\r\n    useEffect(() => {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        transition();\r\n    }, [pagination.activePage, pagination.order, pagination.sort]);\r\n    const onChangeFromDate = evt => setFromDate(evt.target.value);\r\n    const onChangeToDate = evt => setToDate(evt.target.value);\r\n    const sort = p => () => setPagination(Object.assign({}, pagination, { order: pagination.order === 'asc' ? 'desc' : 'asc', sort: p }));\r\n    const transition = () => {\r\n        props.history.push(`${props.location.pathname}?page=${pagination.activePage}&sort=${pagination.sort},${pagination.order}`);\r\n    };\r\n    const handlePagination = currentPage => setPagination(Object.assign({}, pagination, { activePage: currentPage }));\r\n    const getAllAudits = () => {\r\n        props.getAudits(pagination.activePage - 1, pagination.itemsPerPage, `${pagination.sort},${pagination.order}`, fromDate, toDate);\r\n    };\r\n    const { audits, totalItems } = props;\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"h2\", { id: \"audits-page-heading\" }, \"Audits\"),\r\n        React.createElement(\"span\", null,\r\n            React.createElement(Translate, { contentKey: \"audits.filter.from\" }, \"from\")),\r\n        React.createElement(Input, { type: \"date\", value: fromDate, onChange: onChangeFromDate, name: \"fromDate\", id: \"fromDate\" }),\r\n        React.createElement(\"span\", null,\r\n            React.createElement(Translate, { contentKey: \"audits.filter.to\" }, \"to\")),\r\n        React.createElement(Input, { type: \"date\", value: toDate, onChange: onChangeToDate, name: \"toDate\", id: \"toDate\" }),\r\n        audits && audits.length > 0 ? (React.createElement(Table, { striped: true, responsive: true },\r\n            React.createElement(\"thead\", null,\r\n                React.createElement(\"tr\", null,\r\n                    React.createElement(\"th\", { onClick: sort('auditEventDate') },\r\n                        React.createElement(Translate, { contentKey: \"audits.table.header.date\" }, \"Date\"),\r\n                        React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                    React.createElement(\"th\", { onClick: sort('principal') },\r\n                        React.createElement(Translate, { contentKey: \"audits.table.header.principal\" }, \"User\"),\r\n                        React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                    React.createElement(\"th\", { onClick: sort('auditEventType') },\r\n                        React.createElement(Translate, { contentKey: \"audits.table.header.status\" }, \"State\"),\r\n                        React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                    React.createElement(\"th\", null,\r\n                        React.createElement(Translate, { contentKey: \"audits.table.header.data\" }, \"Extra data\")))),\r\n            React.createElement(\"tbody\", null, audits.map((audit, i) => (React.createElement(\"tr\", { key: `audit-${i}` },\r\n                React.createElement(\"td\", null, React.createElement(TextFormat, { value: audit.timestamp, type: \"date\", format: APP_TIMESTAMP_FORMAT })),\r\n                React.createElement(\"td\", null, audit.principal),\r\n                React.createElement(\"td\", null, audit.type),\r\n                React.createElement(\"td\", null,\r\n                    audit.data ? audit.data.message : null,\r\n                    audit.data ? audit.data.remoteAddress : null))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\r\n            React.createElement(Translate, { contentKey: \"audits.notFound\" }, \"No audit found\"))),\r\n        React.createElement(\"div\", { className: audits && audits.length > 0 ? '' : 'd-none' },\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(JhiItemCount, { page: pagination.activePage, total: totalItems, itemsPerPage: pagination.itemsPerPage, i18nEnabled: true })),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(JhiPagination, { activePage: pagination.activePage, onSelect: handlePagination, maxButtons: 5, itemsPerPage: pagination.itemsPerPage, totalItems: props.totalItems })))));\r\n};\r\nconst mapStateToProps = (storeState) => ({\r\n    audits: storeState.administration.audits,\r\n    totalItems: storeState.administration.totalItems\r\n});\r\nconst mapDispatchToProps = { getAudits };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuditsPage);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Input, Row, Table } from 'reactstrap';\r\nimport { Translate, TextFormat, JhiPagination, JhiItemCount, getSortState, IPaginationBaseState } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getAudits } from '../administration.reducer';\r\n\r\nexport interface IAuditsPageProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\r\n\r\nconst previousMonth = (): string => {\r\n  const now: Date = new Date();\r\n  const fromDate =\r\n    now.getMonth() === 0\r\n      ? new Date(now.getFullYear() - 1, 11, now.getDate())\r\n      : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\r\n  return fromDate.toISOString().slice(0, 10);\r\n};\r\n\r\nconst today = (): string => {\r\n  // Today + 1 day - needed if the current day must be included\r\n  const day: Date = new Date();\r\n  day.setDate(day.getDate() + 1);\r\n  const toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n  return toDate.toISOString().slice(0, 10);\r\n};\r\n\r\nexport const AuditsPage = (props: IAuditsPageProps) => {\r\n  const [pagination, setPagination] = useState(getSortState(props.location, ITEMS_PER_PAGE));\r\n  const [fromDate, setFromDate] = useState(previousMonth());\r\n  const [toDate, setToDate] = useState(today());\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    getAllAudits();\r\n  }, [fromDate, toDate, pagination.activePage, pagination.order, pagination.sort]);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    transition();\r\n  }, [pagination.activePage, pagination.order, pagination.sort]);\r\n\r\n  const onChangeFromDate = evt => setFromDate(evt.target.value);\r\n\r\n  const onChangeToDate = evt => setToDate(evt.target.value);\r\n\r\n  const sort = p => () =>\r\n    setPagination({\r\n      ...pagination,\r\n      order: pagination.order === 'asc' ? 'desc' : 'asc',\r\n      sort: p\r\n    });\r\n\r\n  const transition = () => {\r\n    props.history.push(`${props.location.pathname}?page=${pagination.activePage}&sort=${pagination.sort},${pagination.order}`);\r\n  };\r\n\r\n  const handlePagination = currentPage =>\r\n    setPagination({\r\n      ...pagination,\r\n      activePage: currentPage\r\n    });\r\n\r\n  const getAllAudits = () => {\r\n    props.getAudits(pagination.activePage - 1, pagination.itemsPerPage, `${pagination.sort},${pagination.order}`, fromDate, toDate);\r\n  };\r\n\r\n  const { audits, totalItems } = props;\r\n\r\n  return (\r\n    <div>\r\n      <h2 id=\"audits-page-heading\">Audits</h2>\r\n      <span>\r\n        <Translate contentKey=\"audits.filter.from\">from</Translate>\r\n      </span>\r\n      <Input type=\"date\" value={fromDate} onChange={onChangeFromDate} name=\"fromDate\" id=\"fromDate\" />\r\n      <span>\r\n        <Translate contentKey=\"audits.filter.to\">to</Translate>\r\n      </span>\r\n      <Input type=\"date\" value={toDate} onChange={onChangeToDate} name=\"toDate\" id=\"toDate\" />\r\n      {audits && audits.length > 0 ? (\r\n        <Table striped responsive>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={sort('auditEventDate')}>\r\n                <Translate contentKey=\"audits.table.header.date\">Date</Translate>\r\n                <FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th onClick={sort('principal')}>\r\n                <Translate contentKey=\"audits.table.header.principal\">User</Translate>\r\n                <FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th onClick={sort('auditEventType')}>\r\n                <Translate contentKey=\"audits.table.header.status\">State</Translate>\r\n                <FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th>\r\n                <Translate contentKey=\"audits.table.header.data\">Extra data</Translate>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {audits.map((audit, i) => (\r\n              <tr key={`audit-${i}`}>\r\n                <td>{<TextFormat value={audit.timestamp} type=\"date\" format={APP_TIMESTAMP_FORMAT} />}</td>\r\n                <td>{audit.principal}</td>\r\n                <td>{audit.type}</td>\r\n                <td>\r\n                  {audit.data ? audit.data.message : null}\r\n                  {audit.data ? audit.data.remoteAddress : null}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <div className=\"alert alert-warning\">\r\n          <Translate contentKey=\"audits.notFound\">No audit found</Translate>\r\n        </div>\r\n      )}\r\n      <div className={audits && audits.length > 0 ? '' : 'd-none'}>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiItemCount page={pagination.activePage} total={totalItems} itemsPerPage={pagination.itemsPerPage} i18nEnabled />\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            activePage={pagination.activePage}\r\n            onSelect={handlePagination}\r\n            maxButtons={5}\r\n            itemsPerPage={pagination.itemsPerPage}\r\n            totalItems={props.totalItems}\r\n          />\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  audits: storeState.administration.audits,\r\n  totalItems: storeState.administration.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = { getAudits };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuditsPage);\r\n"]}]}