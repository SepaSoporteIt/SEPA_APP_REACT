{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\config\\axios-interceptor.ts","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\config\\axios-interceptor.ts","mtime":1584152541764},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\r\nimport { Storage } from 'react-jhipster';\r\nimport { SERVER_API_URL } from 'app/config/constants';\r\nconst TIMEOUT = 1 * 60 * 1000;\r\naxios.defaults.timeout = TIMEOUT;\r\naxios.defaults.baseURL = SERVER_API_URL;\r\nconst setupAxiosInterceptors = onUnauthenticated => {\r\n    const onRequestSuccess = config => {\r\n        const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    };\r\n    const onResponseSuccess = response => response;\r\n    const onResponseError = err => {\r\n        const status = err.status || (err.response ? err.response.status : 0);\r\n        if (status === 403 || status === 401) {\r\n            onUnauthenticated();\r\n        }\r\n        return Promise.reject(err);\r\n    };\r\n    axios.interceptors.request.use(onRequestSuccess);\r\n    axios.interceptors.response.use(onResponseSuccess, onResponseError);\r\n};\r\nexport default setupAxiosInterceptors;\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\config\\axios-interceptor.ts","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\config\\axios-interceptor.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAe,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEtD,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAC9B,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,cAAc,CAAC;AAExC,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,EAAE;IACjD,MAAM,gBAAgB,GAAG,MAAM,CAAC,EAAE;QAChC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAC7G,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE,CAAC;SAClD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IACF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;IAC/C,MAAM,eAAe,GAAG,GAAG,CAAC,EAAE;QAC5B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACpC,iBAAiB,EAAE,CAAC;SACrB;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;IACF,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACjD,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACtE,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import axios from 'axios';\r\nimport { getBasePath, Storage } from 'react-jhipster';\r\n\r\nimport { SERVER_API_URL } from 'app/config/constants';\r\n\r\nconst TIMEOUT = 1 * 60 * 1000;\r\naxios.defaults.timeout = TIMEOUT;\r\naxios.defaults.baseURL = SERVER_API_URL;\r\n\r\nconst setupAxiosInterceptors = onUnauthenticated => {\r\n  const onRequestSuccess = config => {\r\n    const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  };\r\n  const onResponseSuccess = response => response;\r\n  const onResponseError = err => {\r\n    const status = err.status || (err.response ? err.response.status : 0);\r\n    if (status === 403 || status === 401) {\r\n      onUnauthenticated();\r\n    }\r\n    return Promise.reject(err);\r\n  };\r\n  axios.interceptors.request.use(onRequestSuccess);\r\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\r\n};\r\n\r\nexport default setupAxiosInterceptors;\r\n"]}]}