{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-detail.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-detail.tsx","mtime":1588426126955},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './employee.reducer';\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nexport const EmployeeDetail = (props) => {\r\n    useEffect(() => {\r\n        props.getEntity(props.match.params.id);\r\n    }, []);\r\n    const { employeeEntity } = props;\r\n    return (React.createElement(Row, null,\r\n        React.createElement(Col, { md: \"8\" },\r\n            React.createElement(\"h2\", null,\r\n                React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.title\" }, \"Employee\"),\r\n                \" [\",\r\n                React.createElement(\"b\", null, employeeEntity.name + \" \" + employeeEntity.surname),\r\n                \"]\"),\r\n            React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                React.createElement(\"h3\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.personalData\" }, \"Personal Data\")),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"name\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.name\" }, \"Name\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.name),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"surname\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.surname\" }, \"Surname\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.surname),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"tlf\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.tlf\" }, \"Tlf\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.tlf),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"celular\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.celular\" }, \"Celular\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.celular),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"email\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.email\" }, \"Email\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.email),\r\n                React.createElement(\"h3\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.matData\" }, \"Tuition Data\")),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"matNumber\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.matNumber\" }, \"Mat Number\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.matNumber),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"cuit\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.cuit\" }, \"Cuit\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.cuit),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"degree\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.degree\" }, \"Degree\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.degree),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"especializacion\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.especializacion\" }, \"Especializacion\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.especializacion),\r\n                React.createElement(\"h3\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.addressData\" }, \"Address Data\")),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"addressDirection\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.addressDirection\" }, \"Address Direction\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.addressDirection),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"addressNumber\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.addressNumber\" }, \"Address Number\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.addressNumber),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"floor\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.floor\" }, \"Floor\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.floor),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"departament\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.departament\" }, \"Departament\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.departament),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.localidadId\" }, \"Localidad Id\")),\r\n                React.createElement(\"dd\", null, employeeEntity.localidadId ? employeeEntity.localidadId.localidad : ''),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.partidoId\" }, \"Partido Id\")),\r\n                React.createElement(\"dd\", null, employeeEntity.partidoId ? employeeEntity.partidoId.partido : ''),\r\n                React.createElement(\"h3\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.employee.detail.others\" }, \"Others\")),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"isInternal\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.isInternal\" }, \"Is Internal\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.isInternal ? React.createElement(Translate, { contentKey: \"sepaApp.employee.booleans.true\" }, \"true\") : React.createElement(Translate, { contentKey: \"sepaApp.employee.booleans.false\" }, \"false\")),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"isDisabled\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.isDisabled\" }, \"Is Disabled\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.isDisabled ? React.createElement(Translate, { contentKey: \"sepaApp.employee.booleans.true\" }, \"true\") : React.createElement(Translate, { contentKey: \"sepaApp.employee.booleans.false\" }, \"false\")),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"comentario\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.comentario\" }, \"Comentario\"))),\r\n                React.createElement(\"dd\", null, employeeEntity.comentario),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"createdAt\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.createdAt\" }, \"Created At\"))),\r\n                React.createElement(\"dd\", null,\r\n                    React.createElement(TextFormat, { value: employeeEntity.createdAt, type: \"date\", format: APP_DATE_FORMAT })),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(\"span\", { id: \"updatedAt\" },\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.employee.updatedAt\" }, \"Updated At\"))),\r\n                React.createElement(\"dd\", null,\r\n                    React.createElement(TextFormat, { value: employeeEntity.updatedAt, type: \"date\", format: APP_DATE_FORMAT }))),\r\n            React.createElement(Button, { tag: Link, to: \"/employee\", replace: true, color: \"info\" },\r\n                React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                ' ',\r\n                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                    React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n            \"\\u00A0\",\r\n            React.createElement(Button, { tag: Link, to: `/employee/${employeeEntity.id}/edit`, replace: true, color: \"primary\" },\r\n                React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                ' ',\r\n                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                    React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n};\r\nconst mapStateToProps = ({ employee }) => ({\r\n    employeeEntity: employee.entity\r\n});\r\nconst mapDispatchToProps = { getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeDetail);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-detail.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\employee\\employee-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './employee.reducer';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IEmployeeDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport const EmployeeDetail = (props: IEmployeeDetailProps) => {\r\n  useEffect(() => {\r\n    props.getEntity(props.match.params.id);\r\n  }, []);\r\n\r\n  const { employeeEntity } = props;\r\n  return (\r\n    <Row>\r\n      <Col md=\"8\">\r\n        <h2>\r\n          <Translate contentKey=\"sepaApp.employee.detail.title\">Employee</Translate> [<b>{employeeEntity.name + \" \" + employeeEntity.surname}</b>]\r\n        </h2>\r\n        <dl className=\"jh-entity-details\">\r\n          <h3>\r\n            <Translate contentKey=\"sepaApp.employee.detail.personalData\">Personal Data</Translate>\r\n          </h3>\r\n          <dt>\r\n            <span id=\"name\">\r\n              <Translate contentKey=\"sepaApp.employee.name\">Name</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.name}</dd>\r\n          <dt>\r\n            <span id=\"surname\">\r\n              <Translate contentKey=\"sepaApp.employee.surname\">Surname</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.surname}</dd>\r\n          <dt>\r\n            <span id=\"tlf\">\r\n              <Translate contentKey=\"sepaApp.employee.tlf\">Tlf</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.tlf}</dd>\r\n          <dt>\r\n            <span id=\"celular\">\r\n              <Translate contentKey=\"sepaApp.employee.celular\">Celular</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.celular}</dd>\r\n          <dt>\r\n            <span id=\"email\">\r\n              <Translate contentKey=\"sepaApp.employee.email\">Email</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.email}</dd>\r\n          \r\n          <h3>\r\n            <Translate contentKey=\"sepaApp.employee.detail.matData\">Tuition Data</Translate>\r\n          </h3>\r\n          <dt>\r\n            <span id=\"matNumber\">\r\n              <Translate contentKey=\"sepaApp.employee.matNumber\">Mat Number</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.matNumber}</dd>\r\n          <dt>\r\n            <span id=\"cuit\">\r\n              <Translate contentKey=\"sepaApp.employee.cuit\">Cuit</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.cuit}</dd>\r\n          <dt>\r\n            <span id=\"degree\">\r\n              <Translate contentKey=\"sepaApp.employee.degree\">Degree</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.degree}</dd>\r\n          <dt>\r\n            <span id=\"especializacion\">\r\n              <Translate contentKey=\"sepaApp.employee.especializacion\">Especializacion</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.especializacion}</dd>\r\n\r\n          <h3>\r\n            <Translate contentKey=\"sepaApp.employee.detail.addressData\">Address Data</Translate>\r\n          </h3>\r\n          <dt>\r\n            <span id=\"addressDirection\">\r\n              <Translate contentKey=\"sepaApp.employee.addressDirection\">Address Direction</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.addressDirection}</dd>\r\n          <dt>\r\n            <span id=\"addressNumber\">\r\n              <Translate contentKey=\"sepaApp.employee.addressNumber\">Address Number</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.addressNumber}</dd>\r\n          <dt>\r\n            <span id=\"floor\">\r\n              <Translate contentKey=\"sepaApp.employee.floor\">Floor</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.floor}</dd>\r\n          <dt>\r\n            <span id=\"departament\">\r\n              <Translate contentKey=\"sepaApp.employee.departament\">Departament</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.departament}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"sepaApp.employee.localidadId\">Localidad Id</Translate>\r\n          </dt>\r\n          <dd>{employeeEntity.localidadId ? employeeEntity.localidadId.localidad : ''}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"sepaApp.employee.partidoId\">Partido Id</Translate>\r\n          </dt>\r\n          <dd>{employeeEntity.partidoId ? employeeEntity.partidoId.partido : ''}</dd>\r\n\r\n          <h3>\r\n            <Translate contentKey=\"sepaApp.employee.detail.others\">Others</Translate>\r\n          </h3>\r\n          <dt>\r\n            <span id=\"isInternal\">\r\n              <Translate contentKey=\"sepaApp.employee.isInternal\">Is Internal</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.isInternal ? <Translate contentKey=\"sepaApp.employee.booleans.true\">true</Translate> : <Translate contentKey=\"sepaApp.employee.booleans.false\">false</Translate>}</dd>\r\n          <dt>\r\n            <span id=\"isDisabled\">\r\n              <Translate contentKey=\"sepaApp.employee.isDisabled\">Is Disabled</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.isDisabled ? <Translate contentKey=\"sepaApp.employee.booleans.true\">true</Translate> : <Translate contentKey=\"sepaApp.employee.booleans.false\">false</Translate>}</dd>\r\n          <dt>\r\n            <span id=\"comentario\">\r\n              <Translate contentKey=\"sepaApp.employee.comentario\">Comentario</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>{employeeEntity.comentario}</dd>\r\n          <dt>\r\n            <span id=\"createdAt\">\r\n              <Translate contentKey=\"sepaApp.employee.createdAt\">Created At</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>\r\n            <TextFormat value={employeeEntity.createdAt} type=\"date\" format={APP_DATE_FORMAT} />\r\n          </dd>\r\n          <dt>\r\n            <span id=\"updatedAt\">\r\n              <Translate contentKey=\"sepaApp.employee.updatedAt\">Updated At</Translate>\r\n            </span>\r\n          </dt>\r\n          <dd>\r\n            <TextFormat value={employeeEntity.updatedAt} type=\"date\" format={APP_DATE_FORMAT} />\r\n          </dd>\r\n        </dl>\r\n        <Button tag={Link} to=\"/employee\" replace color=\"info\">\r\n          <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n          <span className=\"d-none d-md-inline\">\r\n            <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n          </span>\r\n        </Button>\r\n        &nbsp;\r\n        <Button tag={Link} to={`/employee/${employeeEntity.id}/edit`} replace color=\"primary\">\r\n          <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n          <span className=\"d-none d-md-inline\">\r\n            <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n          </span>\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ employee }: IRootState) => ({\r\n  employeeEntity: employee.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeDetail);\r\n"]}]}