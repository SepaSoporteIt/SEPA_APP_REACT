{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx","mtime":1584152541806},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getUser, deleteUser } from './user-management.reducer';\r\nexport const UserManagementDeleteDialog = (props) => {\r\n    useEffect(() => {\r\n        props.getUser(props.match.params.login);\r\n    }, []);\r\n    const handleClose = event => {\r\n        event.stopPropagation();\r\n        props.history.goBack();\r\n    };\r\n    const confirmDelete = event => {\r\n        props.deleteUser(props.user.login);\r\n        handleClose(event);\r\n    };\r\n    const { user } = props;\r\n    return (React.createElement(Modal, { isOpen: true, toggle: handleClose },\r\n        React.createElement(ModalHeader, { toggle: handleClose },\r\n            React.createElement(Translate, { contentKey: \"entity.delete.title\" }, \"Confirm delete operation\")),\r\n        React.createElement(ModalBody, null,\r\n            React.createElement(Translate, { contentKey: \"userManagement.delete.question\", interpolate: { login: user.login } }, \"Are you sure you want to delete this User?\")),\r\n        React.createElement(ModalFooter, null,\r\n            React.createElement(Button, { color: \"secondary\", onClick: handleClose },\r\n                React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\r\n                \"\\u00A0\",\r\n                React.createElement(Translate, { contentKey: \"entity.action.cancel\" }, \"Cancel\")),\r\n            React.createElement(Button, { color: \"danger\", onClick: confirmDelete },\r\n                React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                \"\\u00A0\",\r\n                React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))));\r\n};\r\nconst mapStateToProps = (storeState) => ({\r\n    user: storeState.userManagement.user\r\n});\r\nconst mapDispatchToProps = { getUser, deleteUser };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementDeleteDialog);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAChF,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAEjE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAKhE,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,KAAuC,EAAE,EAAE;IACpF,SAAS,CAAC,GAAG,EAAE;QACb,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,WAAW,GAAG,KAAK,CAAC,EAAE;QAC1B,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,KAAK,CAAC,EAAE;QAC5B,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,WAAW,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEvB,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,WAAW;QAC/B,oBAAC,WAAW,IAAC,MAAM,EAAE,WAAW;YAC9B,oBAAC,SAAS,IAAC,UAAU,EAAC,qBAAqB,+BAAqC,CACpE;QACd,oBAAC,SAAS;YACR,oBAAC,SAAS,IAAC,UAAU,EAAC,gCAAgC,EAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,iDAE7E,CACF;QACZ,oBAAC,WAAW;YACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,WAAW;gBAC5C,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;gBAE9B,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD;YACT,oBAAC,MAAM,IAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,aAAa;gBAC3C,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;gBAEhC,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD,CACG,CACR,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,UAAsB,EAAE,EAAE,CAAC,CAAC;IACnD,IAAI,EAAE,UAAU,CAAC,cAAc,CAAC,IAAI;CACrC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;AAKnD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,0BAA0B,CAAC,CAAC","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { getUser, deleteUser } from './user-management.reducer';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nexport interface IUserManagementDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ login: string }> {}\r\n\r\nexport const UserManagementDeleteDialog = (props: IUserManagementDeleteDialogProps) => {\r\n  useEffect(() => {\r\n    props.getUser(props.match.params.login);\r\n  }, []);\r\n\r\n  const handleClose = event => {\r\n    event.stopPropagation();\r\n    props.history.goBack();\r\n  };\r\n\r\n  const confirmDelete = event => {\r\n    props.deleteUser(props.user.login);\r\n    handleClose(event);\r\n  };\r\n\r\n  const { user } = props;\r\n\r\n  return (\r\n    <Modal isOpen toggle={handleClose}>\r\n      <ModalHeader toggle={handleClose}>\r\n        <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Translate contentKey=\"userManagement.delete.question\" interpolate={{ login: user.login }}>\r\n          Are you sure you want to delete this User?\r\n        </Translate>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"secondary\" onClick={handleClose}>\r\n          <FontAwesomeIcon icon=\"ban\" />\r\n          &nbsp;\r\n          <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n        </Button>\r\n        <Button color=\"danger\" onClick={confirmDelete}>\r\n          <FontAwesomeIcon icon=\"trash\" />\r\n          &nbsp;\r\n          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  user: storeState.userManagement.user\r\n});\r\n\r\nconst mapDispatchToProps = { getUser, deleteUser };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserManagementDeleteDialog);\r\n"]}]}