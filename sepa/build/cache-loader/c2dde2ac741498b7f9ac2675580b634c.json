{"remainingRequest":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx","dependencies":[{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx","mtime":1580568107570},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Badge } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nimport { languages } from 'app/config/translation';\r\nimport { getUser } from './user-management.reducer';\r\nexport const UserManagementDetail = (props) => {\r\n    useEffect(() => {\r\n        props.getUser(props.match.params.login);\r\n    }, []);\r\n    const { user } = props;\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"h2\", null,\r\n            React.createElement(Translate, { contentKey: \"userManagement.detail.title\" }, \"User\"),\r\n            \" [\",\r\n            React.createElement(\"b\", null, user.login),\r\n            \"]\"),\r\n        React.createElement(Row, { size: \"md\" },\r\n            React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.login\" }, \"Login\")),\r\n                React.createElement(\"dd\", null,\r\n                    React.createElement(\"span\", null, user.login),\r\n                    \"\\u00A0\",\r\n                    user.activated ? (React.createElement(Badge, { color: \"success\" },\r\n                        React.createElement(Translate, { contentKey: \"userManagement.activated\" }, \"Activated\"))) : (React.createElement(Badge, { color: \"danger\" },\r\n                        React.createElement(Translate, { contentKey: \"userManagement.deactivated\" }, \"Deactivated\")))),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.firstName\" }, \"First Name\")),\r\n                React.createElement(\"dd\", null, user.firstName),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.lastName\" }, \"Last Name\")),\r\n                React.createElement(\"dd\", null, user.lastName),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.email\" }, \"Email\")),\r\n                React.createElement(\"dd\", null, user.email),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.langKey\" }, \"Lang Key\")),\r\n                React.createElement(\"dd\", null, user.langKey ? languages[user.langKey].name : undefined),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.createdBy\" }, \"Created By\")),\r\n                React.createElement(\"dd\", null, user.createdBy),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.createdDate\" }, \"Created Date\")),\r\n                React.createElement(\"dd\", null,\r\n                    React.createElement(TextFormat, { value: user.createdDate, type: \"date\", format: APP_DATE_FORMAT, blankOnInvalid: true })),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.lastModifiedBy\" }, \"Last Modified By\")),\r\n                React.createElement(\"dd\", null, user.lastModifiedBy),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.lastModifiedDate\" }, \"Last Modified Date\")),\r\n                React.createElement(\"dd\", null,\r\n                    React.createElement(TextFormat, { value: user.lastModifiedDate, type: \"date\", format: APP_DATE_FORMAT, blankOnInvalid: true })),\r\n                React.createElement(\"dt\", null,\r\n                    React.createElement(Translate, { contentKey: \"userManagement.profiles\" }, \"Profiles\")),\r\n                React.createElement(\"dd\", null,\r\n                    React.createElement(\"ul\", { className: \"list-unstyled\" }, user.authorities\r\n                        ? user.authorities.map((authority, i) => (React.createElement(\"li\", { key: `user-auth-${i}` },\r\n                            React.createElement(Badge, { color: \"info\" }, authority))))\r\n                        : null)))),\r\n        React.createElement(Button, { tag: Link, to: \"/admin/user-management\", replace: true, color: \"info\" },\r\n            React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n            ' ',\r\n            React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\")))));\r\n};\r\nconst mapStateToProps = (storeState) => ({\r\n    user: storeState.userManagement.user\r\n});\r\nconst mapDispatchToProps = { getUser };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementDetail);\r\n",{"version":3,"file":"C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx","sourceRoot":"","sources":["C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\sepanuevo\\SEPA_APP_REACT\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Badge } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nimport { languages } from 'app/config/translation';\r\nimport { getUser } from './user-management.reducer';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nexport interface IUserManagementDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ login: string }> {}\r\n\r\nexport const UserManagementDetail = (props: IUserManagementDetailProps) => {\r\n  useEffect(() => {\r\n    props.getUser(props.match.params.login);\r\n  }, []);\r\n\r\n  const { user } = props;\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <Translate contentKey=\"userManagement.detail.title\">User</Translate> [<b>{user.login}</b>]\r\n      </h2>\r\n      <Row size=\"md\">\r\n        <dl className=\"jh-entity-details\">\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.login\">Login</Translate>\r\n          </dt>\r\n          <dd>\r\n            <span>{user.login}</span>&nbsp;\r\n            {user.activated ? (\r\n              <Badge color=\"success\">\r\n                <Translate contentKey=\"userManagement.activated\">Activated</Translate>\r\n              </Badge>\r\n            ) : (\r\n              <Badge color=\"danger\">\r\n                <Translate contentKey=\"userManagement.deactivated\">Deactivated</Translate>\r\n              </Badge>\r\n            )}\r\n          </dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.firstName\">First Name</Translate>\r\n          </dt>\r\n          <dd>{user.firstName}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.lastName\">Last Name</Translate>\r\n          </dt>\r\n          <dd>{user.lastName}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.email\">Email</Translate>\r\n          </dt>\r\n          <dd>{user.email}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.langKey\">Lang Key</Translate>\r\n          </dt>\r\n          <dd>{user.langKey ? languages[user.langKey].name : undefined}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.createdBy\">Created By</Translate>\r\n          </dt>\r\n          <dd>{user.createdBy}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.createdDate\">Created Date</Translate>\r\n          </dt>\r\n          <dd>\r\n            <TextFormat value={user.createdDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\r\n          </dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.lastModifiedBy\">Last Modified By</Translate>\r\n          </dt>\r\n          <dd>{user.lastModifiedBy}</dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.lastModifiedDate\">Last Modified Date</Translate>\r\n          </dt>\r\n          <dd>\r\n            <TextFormat value={user.lastModifiedDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\r\n          </dd>\r\n          <dt>\r\n            <Translate contentKey=\"userManagement.profiles\">Profiles</Translate>\r\n          </dt>\r\n          <dd>\r\n            <ul className=\"list-unstyled\">\r\n              {user.authorities\r\n                ? user.authorities.map((authority, i) => (\r\n                    <li key={`user-auth-${i}`}>\r\n                      <Badge color=\"info\">{authority}</Badge>\r\n                    </li>\r\n                  ))\r\n                : null}\r\n            </ul>\r\n          </dd>\r\n        </dl>\r\n      </Row>\r\n      <Button tag={Link} to=\"/admin/user-management\" replace color=\"info\">\r\n        <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n        <span className=\"d-none d-md-inline\">\r\n          <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  user: storeState.userManagement.user\r\n});\r\n\r\nconst mapDispatchToProps = { getUser };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserManagementDetail);\r\n"]}]}