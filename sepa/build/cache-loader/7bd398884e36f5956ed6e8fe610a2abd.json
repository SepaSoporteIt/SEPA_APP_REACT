{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration-detail.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration-detail.tsx","mtime":1588426126957},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './expiration.reducer';\r\nimport { APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nexport class ExpirationDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        const { expirationEntity } = this.props;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"sepaApp.expiration.detail.title\" }, \"Expiration\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, expirationEntity.uniqueCode),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"uniqueCode\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.uniqueCode\" }, \"Unique Code\"))),\r\n                    React.createElement(\"dd\", null, expirationEntity.uniqueCode),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.expiration.company\" }, \"Company\")),\r\n                    React.createElement(\"dd\", null, expirationEntity.company ? expirationEntity.company.name + \" - \" + expirationEntity.company.addressDirection + \" \" + expirationEntity.company.addressNumber : ''),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"responsible\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.responsible\" }, \"Responsible\"))),\r\n                    React.createElement(\"dd\", null, expirationEntity.responsible),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.expiration.study\" }, \"Study\")),\r\n                    React.createElement(\"dd\", null, expirationEntity.study ? expirationEntity.study.name : ''),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"status\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.status\" }, \"Status\"))),\r\n                    React.createElement(\"dd\", null, expirationEntity.status),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"isCompleted\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.isCompleted\" }, \"Is Completed\"))),\r\n                    React.createElement(\"dd\", null, expirationEntity.isCompleted ? React.createElement(Translate, { contentKey: \"sepaApp.expiration.booleans.true\" }, \"true\") : React.createElement(Translate, { contentKey: \"sepaApp.expiration.booleans.false\" }, \"false\")),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"startDate\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.startDate\" }, \"Start Date\"))),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: expirationEntity.startDate, type: \"date\", format: APP_LOCAL_DATE_FORMAT })),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"endDate\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.endDate\" }, \"End Date\"))),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: expirationEntity.endDate, type: \"date\", format: APP_LOCAL_DATE_FORMAT })),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"sepaApp.expiration.employee\" }, \"Employee\")),\r\n                    React.createElement(\"dd\", null, expirationEntity.employee ? expirationEntity.employee.name + \" \" + expirationEntity.employee.surname : ''),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"comments\" },\r\n                            React.createElement(Translate, { contentKey: \"sepaApp.expiration.comments\" }, \"Comments\"))),\r\n                    React.createElement(\"dd\", null, expirationEntity.comments)),\r\n                React.createElement(Button, { tag: Link, to: \"/expiration\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: `/expiration/${expirationEntity.id}/edit`, replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ expiration }) => ({\r\n    expirationEntity: expiration.entity\r\n});\r\nconst mapDispatchToProps = { getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpirationDetail);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration-detail.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\entities\\expiration\\expiration-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, byteSize, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './expiration.reducer';\r\nimport { IExpiration } from 'app/shared/model/expiration.model';\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { format } from 'path';\r\n\r\nexport interface IExpirationDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ExpirationDetail extends React.Component<IExpirationDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { expirationEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"sepaApp.expiration.detail.title\">Expiration</Translate> [<b>{expirationEntity.uniqueCode}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"uniqueCode\">\r\n                <Translate contentKey=\"sepaApp.expiration.uniqueCode\">Unique Code</Translate> \r\n              </span>\r\n            </dt>\r\n            <dd>{expirationEntity.uniqueCode}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"sepaApp.expiration.company\">Company</Translate>\r\n            </dt>\r\n            <dd>{expirationEntity.company ? expirationEntity.company.name + \" - \" + expirationEntity.company.addressDirection + \" \" + expirationEntity.company.addressNumber: ''}</dd>\r\n            <dt>\r\n              <span id=\"responsible\">\r\n                <Translate contentKey=\"sepaApp.expiration.responsible\">Responsible</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{expirationEntity.responsible}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"sepaApp.expiration.study\">Study</Translate>\r\n            </dt>\r\n            <dd>{expirationEntity.study ? expirationEntity.study.name : ''}</dd>\r\n            <dt>\r\n              <span id=\"status\">\r\n                <Translate contentKey=\"sepaApp.expiration.status\">Status</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{expirationEntity.status}</dd>\r\n            <dt>\r\n              <span id=\"isCompleted\">\r\n                <Translate contentKey=\"sepaApp.expiration.isCompleted\">Is Completed</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{expirationEntity.isCompleted ? <Translate contentKey=\"sepaApp.expiration.booleans.true\">true</Translate> : <Translate contentKey=\"sepaApp.expiration.booleans.false\">false</Translate>}</dd>\r\n            <dt>\r\n              <span id=\"startDate\">\r\n                <Translate contentKey=\"sepaApp.expiration.startDate\">Start Date</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={expirationEntity.startDate} type=\"date\" format={APP_LOCAL_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"endDate\">\r\n                <Translate contentKey=\"sepaApp.expiration.endDate\">End Date</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={expirationEntity.endDate} type=\"date\" format={APP_LOCAL_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <Translate contentKey=\"sepaApp.expiration.employee\">Employee</Translate>\r\n            </dt>\r\n            <dd>{expirationEntity.employee ? expirationEntity.employee.name + \" \" + expirationEntity.employee.surname: ''}</dd>\r\n\r\n            <dt>\r\n              <span id=\"comments\">\r\n                <Translate contentKey=\"sepaApp.expiration.comments\">Comments</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{expirationEntity.comments}</dd>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </dl>\r\n          <Button tag={Link} to=\"/expiration\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/expiration/${expirationEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ expiration }: IRootState) => ({\r\n  expirationEntity: expiration.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpirationDetail);\r\n"]}]}