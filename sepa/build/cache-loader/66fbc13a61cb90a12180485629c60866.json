{"remainingRequest":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx","dependencies":[{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx","mtime":1584152541801},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input, Row, Col, Badge } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { getConfigurations, getEnv } from '../administration.reducer';\r\nexport const ConfigurationPage = (props) => {\r\n    const [filter, setFilter] = useState('');\r\n    const [reversePrefix, setReversePrefix] = useState(false);\r\n    const [reverseProperties, setReverseProperties] = useState(false);\r\n    useEffect(() => {\r\n        props.getConfigurations();\r\n        props.getEnv();\r\n    }, []);\r\n    const changeFilter = evt => setFilter(evt.target.value);\r\n    const envFilterFn = configProp => configProp.toUpperCase().includes(filter.toUpperCase());\r\n    const propsFilterFn = configProp => configProp.prefix.toUpperCase().includes(filter.toUpperCase());\r\n    const changeReversePrefix = () => setReversePrefix(!reversePrefix);\r\n    const changeReverseProperties = () => setReverseProperties(!reverseProperties);\r\n    const getContextList = contexts => Object.values(contexts)\r\n        .map((v) => v.beans)\r\n        .reduce((acc, e) => (Object.assign({}, acc, e)));\r\n    const { configuration } = props;\r\n    const configProps = configuration && configuration.configProps ? configuration.configProps : {};\r\n    const env = configuration && configuration.env ? configuration.env : {};\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"h2\", { id: \"configuration-page-heading\" },\r\n            React.createElement(Translate, { contentKey: \"configuration.title\" }, \"Configuration\")),\r\n        React.createElement(\"span\", null,\r\n            React.createElement(Translate, { contentKey: \"configuration.filter\" }, \"Filter\")),\r\n        ' ',\r\n        React.createElement(Input, { type: \"search\", value: filter, onChange: changeFilter, name: \"search\", id: \"search\" }),\r\n        React.createElement(\"label\", null, \"Spring configuration\"),\r\n        React.createElement(Table, { className: \"table table-striped table-bordered table-responsive d-table\" },\r\n            React.createElement(\"thead\", null,\r\n                React.createElement(\"tr\", null,\r\n                    React.createElement(\"th\", { onClick: changeReversePrefix },\r\n                        React.createElement(Translate, { contentKey: \"configuration.table.prefix\" }, \"Prefix\")),\r\n                    React.createElement(\"th\", { onClick: changeReverseProperties },\r\n                        React.createElement(Translate, { contentKey: \"configuration.table.properties\" }, \"Properties\")))),\r\n            React.createElement(\"tbody\", null, configProps.contexts\r\n                ? Object.values(getContextList(configProps.contexts))\r\n                    .filter(propsFilterFn)\r\n                    .map((property, propIndex) => (React.createElement(\"tr\", { key: propIndex },\r\n                    React.createElement(\"td\", null, property['prefix']),\r\n                    React.createElement(\"td\", null, Object.keys(property['properties']).map((propKey, index) => (React.createElement(Row, { key: index },\r\n                        React.createElement(Col, { md: \"4\" }, propKey),\r\n                        React.createElement(Col, { md: \"8\" },\r\n                            React.createElement(Badge, { className: \"float-right badge-secondary break\" }, JSON.stringify(property['properties'][propKey]))))))))))\r\n                : null)),\r\n        env.propertySources\r\n            ? env.propertySources.map((envKey, envIndex) => (React.createElement(\"div\", { key: envIndex },\r\n                React.createElement(\"h4\", null,\r\n                    React.createElement(\"span\", null, envKey.name)),\r\n                React.createElement(Table, { className: \"table table-sm table-striped table-bordered table-responsive d-table\" },\r\n                    React.createElement(\"thead\", null,\r\n                        React.createElement(\"tr\", { key: envIndex },\r\n                            React.createElement(\"th\", { className: \"w-40\" }, \"Property\"),\r\n                            React.createElement(\"th\", { className: \"w-60\" }, \"Value\"))),\r\n                    React.createElement(\"tbody\", null, Object.keys(envKey.properties)\r\n                        .filter(envFilterFn)\r\n                        .map((propKey, propIndex) => (React.createElement(\"tr\", { key: propIndex },\r\n                        React.createElement(\"td\", { className: \"break\" }, propKey),\r\n                        React.createElement(\"td\", { className: \"break\" },\r\n                            React.createElement(\"span\", { className: \"float-right badge badge-secondary break\" }, envKey.properties[propKey].value))))))))))\r\n            : null));\r\n};\r\nconst mapStateToProps = ({ administration }) => ({\r\n    configuration: administration.configuration,\r\n    isFetching: administration.loading\r\n});\r\nconst mapDispatchToProps = { getConfigurations, getEnv };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationPage);\r\n",{"version":3,"file":"C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx","sourceRoot":"","sources":["C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\node_modules\\eslint-loader\\index.js!C:\\Users\\User ssd\\Desktop\\programacion\\trabajo\\app git\\SEPA_APP_REACT\\sepa\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input, Row, Col, Badge } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\n\r\nimport { getConfigurations, getEnv } from '../administration.reducer';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nexport interface IConfigurationPageProps extends StateProps, DispatchProps {}\r\n\r\nexport const ConfigurationPage = (props: IConfigurationPageProps) => {\r\n  const [filter, setFilter] = useState('');\r\n  const [reversePrefix, setReversePrefix] = useState(false);\r\n  const [reverseProperties, setReverseProperties] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.getConfigurations();\r\n    props.getEnv();\r\n  }, []);\r\n\r\n  const changeFilter = evt => setFilter(evt.target.value);\r\n\r\n  const envFilterFn = configProp => configProp.toUpperCase().includes(filter.toUpperCase());\r\n\r\n  const propsFilterFn = configProp => configProp.prefix.toUpperCase().includes(filter.toUpperCase());\r\n\r\n  const changeReversePrefix = () => setReversePrefix(!reversePrefix);\r\n\r\n  const changeReverseProperties = () => setReverseProperties(!reverseProperties);\r\n\r\n  const getContextList = contexts =>\r\n    Object.values(contexts)\r\n      .map((v: any) => v.beans)\r\n      .reduce((acc, e) => ({ ...acc, ...e }));\r\n\r\n  const { configuration } = props;\r\n\r\n  const configProps = configuration && configuration.configProps ? configuration.configProps : {};\r\n\r\n  const env = configuration && configuration.env ? configuration.env : {};\r\n\r\n  return (\r\n    <div>\r\n      <h2 id=\"configuration-page-heading\">\r\n        <Translate contentKey=\"configuration.title\">Configuration</Translate>\r\n      </h2>\r\n      <span>\r\n        <Translate contentKey=\"configuration.filter\">Filter</Translate>\r\n      </span>{' '}\r\n      <Input type=\"search\" value={filter} onChange={changeFilter} name=\"search\" id=\"search\" />\r\n      <label>Spring configuration</label>\r\n      <Table className=\"table table-striped table-bordered table-responsive d-table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={changeReversePrefix}>\r\n              <Translate contentKey=\"configuration.table.prefix\">Prefix</Translate>\r\n            </th>\r\n            <th onClick={changeReverseProperties}>\r\n              <Translate contentKey=\"configuration.table.properties\">Properties</Translate>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {configProps.contexts\r\n            ? Object.values(getContextList(configProps.contexts))\r\n                .filter(propsFilterFn)\r\n                .map((property, propIndex) => (\r\n                  <tr key={propIndex}>\r\n                    <td>{property['prefix']}</td>\r\n                    <td>\r\n                      {Object.keys(property['properties']).map((propKey, index) => (\r\n                        <Row key={index}>\r\n                          <Col md=\"4\">{propKey}</Col>\r\n                          <Col md=\"8\">\r\n                            <Badge className=\"float-right badge-secondary break\">{JSON.stringify(property['properties'][propKey])}</Badge>\r\n                          </Col>\r\n                        </Row>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n      {env.propertySources\r\n        ? env.propertySources.map((envKey, envIndex) => (\r\n            <div key={envIndex}>\r\n              <h4>\r\n                <span>{envKey.name}</span>\r\n              </h4>\r\n              <Table className=\"table table-sm table-striped table-bordered table-responsive d-table\">\r\n                <thead>\r\n                  <tr key={envIndex}>\r\n                    <th className=\"w-40\">Property</th>\r\n                    <th className=\"w-60\">Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.keys(envKey.properties)\r\n                    .filter(envFilterFn)\r\n                    .map((propKey, propIndex) => (\r\n                      <tr key={propIndex}>\r\n                        <td className=\"break\">{propKey}</td>\r\n                        <td className=\"break\">\r\n                          <span className=\"float-right badge badge-secondary break\">{envKey.properties[propKey].value}</span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ administration }: IRootState) => ({\r\n  configuration: administration.configuration,\r\n  isFetching: administration.loading\r\n});\r\n\r\nconst mapDispatchToProps = { getConfigurations, getEnv };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConfigurationPage);\r\n"]}]}